[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.tsx":"3","/app/src/components/clock/Clock.tsx":"4","/app/src/components/weather/WeatherSummary.tsx":"5","/app/src/components/weather/WeatherIcon.tsx":"6","/app/src/api/SHoliday/SHolidayApi.tsx":"7","/app/src/api/Api.tsx":"8"},{"size":691,"mtime":1609704961627,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1609688129575,"results":"11","hashOfConfig":"10"},{"size":909,"mtime":1609706643996,"results":"12","hashOfConfig":"10"},{"size":2583,"mtime":1609713357894,"results":"13","hashOfConfig":"10"},{"size":783,"mtime":1609707704554,"results":"14","hashOfConfig":"10"},{"size":887,"mtime":1609705423347,"results":"15","hashOfConfig":"10"},{"size":510,"mtime":1609710038835,"results":"16","hashOfConfig":"10"},{"size":4266,"mtime":1609688129573,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ec10hr",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/app/src/index.js",[],["39","40"],"/app/src/reportWebVitals.js",[],"/app/src/App.tsx",[],["41","42"],"/app/src/components/clock/Clock.tsx",[],"/app/src/components/weather/WeatherSummary.tsx",["43","44","45"],"import * as React from 'react';\r\nimport { WeatherIcon } from './WeatherIcon';\r\n\r\ninterface IWeatherSummary {\r\n    name: string;\r\n    lat: number;\r\n    lon: number;\r\n    msl: number;\r\n}\r\n\r\nexport const WeatherSummary: React.FunctionComponent<IWeatherSummary> = (props) => {\r\n\r\n    const [tempC, setTempC] = React.useState<number>(0);\r\n    const [weather, setWeather] = React.useState<string>();\r\n\r\n    return (\r\n        <div className=\"weather-summary\">\r\n            <div className=\"header\">{props.name}</div>\r\n            <div className={\"temperature \" + (tempC >= 10 ? \"hot\" : \"cold\")}>\r\n                {tempC > 0 ? \"+\" : \"\"}{tempC}Â°C \r\n            </div>\r\n            <div>\r\n                <WeatherIcon weather=\"Cloud\" size={48} />\r\n            </div>\r\n        </div>\r\n    );\r\n}","/app/src/components/weather/WeatherIcon.tsx",["46"],"import * as React from 'react';\r\nimport { AlertTriangle, CloudDrizzle, CloudLightning, CloudRain, CloudSnow, Cloud, Sun } from 'react-feather';\r\n\r\ninterface IWeatherIcon {\r\n    weather: string;\r\n    size: number;\r\n}\r\n\r\nexport const WeatherIcon: React.FunctionComponent<IWeatherIcon> = (props) => {\r\n\r\n    switch (props.weather) {\r\n        \r\n        case 'Sun':\r\n        case 'LightCloud':\r\n            return <Sun size={props.size}/>\r\n\r\n        case 'PartlyCloud':\r\n        case 'Cloud':\r\n            return <Cloud size={props.size}/>\r\n\r\n        case \"Snow\":\r\n            return <CloudSnow size={props.size}/>\r\n\r\n        case \"Drizzle\":\r\n        case \"LightRain\":\r\n            return <CloudDrizzle size={props.size}/>\r\n\r\n        case \"Rain\":\r\n            return <CloudRain size={props.size}/>\r\n        \r\n        default:\r\n            return <AlertTriangle size={props.size}/>\r\n    }\r\n}\r\n","/app/src/api/SHoliday/SHolidayApi.tsx",[],"/app/src/api/Api.tsx",[],["47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":13,"column":19,"nodeType":"55","messageId":"56","endLine":13,"endColumn":27},{"ruleId":"53","severity":1,"message":"57","line":14,"column":12,"nodeType":"55","messageId":"56","endLine":14,"endColumn":19},{"ruleId":"53","severity":1,"message":"58","line":14,"column":21,"nodeType":"55","messageId":"56","endLine":14,"endColumn":31},{"ruleId":"53","severity":1,"message":"59","line":2,"column":39,"nodeType":"55","messageId":"56","endLine":2,"endColumn":53},{"ruleId":"49","replacedBy":"60"},{"ruleId":"51","replacedBy":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"@typescript-eslint/no-unused-vars","'setTempC' is assigned a value but never used.","Identifier","unusedVar","'weather' is assigned a value but never used.","'setWeather' is assigned a value but never used.","'CloudLightning' is defined but never used.",["62"],["63"],"no-global-assign","no-unsafe-negation"]